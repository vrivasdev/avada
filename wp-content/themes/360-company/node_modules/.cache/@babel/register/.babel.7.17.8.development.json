{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\\\\gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.17.8:development":{"value":{"code":"/**\r\n * Gulpfile.\r\n *\r\n * Gulp with WordPress.\r\n *\r\n * Implements:\r\n *      1. Live reloads browser with BrowserSync.\r\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\r\n *         CSS minification, and Merge Media Queries.\r\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\r\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\r\n *      5. Watches files for changes in CSS or JS.\r\n *      6. Watches files for changes in PHP.\r\n *      7. Corrects the line endings.\r\n *      8. InjectCSS instead of browser page reload.\r\n *      9. Generates .pot file for i18n and l10n.\r\n *\r\n * @tutorial https://github.com/ahmadawais/WPGulp\r\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\r\n */\n\n/**\r\n * Load WPGulp Configuration.\r\n *\r\n * TODO: Customize your project in the wpgulp.js file.\r\n */\nconst config = require('./wpgulp.config.js');\n/**\r\n * Load Plugins.\r\n *\r\n * Load gulp plugins and passing them semantic names.\r\n */\n\n\nconst gulp = require('gulp'); // Gulp of-course.\n// CSS related plugins.\n\n\nconst sass = require('gulp-sass')(require('sass')); // Gulp plugin for Sass compilation.\n\n\nvar sassGlob = require('gulp-sass-glob'); //Global paths \n\n\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\n\n\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\n\n\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\n\n\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n// JS related plugins.\n\n\nconst concat = require('gulp-concat'); // Concatenates JS files.\n\n\nconst uglify = require('gulp-uglify'); // Minifies JS files.\n\n\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n// Image related plugins.\n\n\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n// Utility related plugins.\n\n\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\n\n\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\n\n\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\n\n\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\n\n\nconst notify = require('gulp-notify'); // Sends message notification to you.\n\n\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\n\n\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\n\n\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\n\n\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\n\n\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\n\n\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\n\n\nconst beep = require('beepbeep');\n\nconst zip = require('gulp-zip'); // Zip plugin or theme file.\n\n\nconst webpack = require('webpack');\n\nconst webpackStream = require('webpack-stream');\n\nconst webpackConfig = require('./webpack.config.js');\n\nconst axios = require('axios');\n/**\r\n * Custom Error Handler.\r\n *\r\n * @param Mixed err\r\n */\n\n\nconst errorHandler = r => {\n  notify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n  beep(); // this.emit('end');\n};\n/**\r\n * Task: `browser-sync`.\r\n *\r\n * Live Reloads, CSS injections, Localhost tunneling.\r\n * @link http://www.browsersync.io/docs/options/\r\n *\r\n * @param {Mixed} done Done.\r\n */\n\n\nconst browsersync = done => {\n  browserSync.init({\n    proxy: config.projectURL,\n    open: config.browserAutoOpen,\n    injectChanges: config.injectChanges,\n    watchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir'],\n    notify: false\n  });\n  done();\n}; // Helper function to allow browser reload with Gulp 4.\n\n\nconst reload = done => {\n  browserSync.reload();\n  done();\n};\n/**\r\n * Task: `styles`.\r\n *\r\n * Compiles Sass, Autoprefixes it and Minifies CSS.\r\n *\r\n * This task does the following:\r\n *    1. Gets the source scss file\r\n *    2. Compiles Sass to CSS\r\n *    3. Writes Sourcemaps for it\r\n *    4. Autoprefixes it and generates style.css\r\n *    5. Renames the CSS file with suffix .min.css\r\n *    6. Minifies the CSS file and generates style.min.css\r\n *    7. Injects CSS or reloads the browser via browserSync\r\n */\n\n\ngulp.task('styles', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sassGlob()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    //outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(sourcemaps.write('./')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n  .pipe(notify({\n    message: '\\n\\n✅  ===> STYLES — completed!\\n',\n    onLast: true\n  }));\n});\n/**\r\n * Task: `stylesRTL`.\r\n *\r\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\r\n *\r\n * This task does the following:\r\n *    1. Gets the source scss file\r\n *    2. Compiles Sass to CSS\r\n *    4. Autoprefixes it and generates style.css\r\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\r\n *    6. Writes Sourcemaps for style-rtl.css\r\n *    7. Renames the CSS files with suffix .min.css\r\n *    8. Minifies the CSS file and generates style-rtl.min.css\r\n *    9. Injects CSS or reloads the browser via browserSync\r\n */\n\ngulp.task('stylesRTL', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    //outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(rename({\n    suffix: '-rtl'\n  })) // Append \"-rtl\" to the filename.\n  .pipe(rtlcss()) // Convert to RTL.\n  .pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(notify({\n    message: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n    onLast: true\n  }));\n});\n/**\r\n * Task: `vendorsJS`.\r\n *\r\n * Concatenate and uglify vendor JS scripts.\r\n *\r\n * This task does the following:\r\n *     1. Gets the source folder for JS vendor files\r\n *     2. Concatenates all the files and generates vendors.js\r\n *     3. Renames the JS file with suffix .min.js\r\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\r\n */\n\ngulp.task('vendorsJS', () => {\n  return gulp.src(config.jsVendorSRC, {\n    since: gulp.lastRun('vendorsJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env', // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n\n    }]]\n  })).pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsVendorFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(rename({\n    basename: config.jsVendorFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(notify({\n    message: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n    onLast: true\n  }));\n});\n/**\r\n * Task: `customJS`.\r\n *\r\n * Concatenate and uglify custom JS scripts.\r\n *\r\n * This task does the following:\r\n *     1. Gets the source folder for JS custom files\r\n *     2. Concatenates all the files and generates custom.js\r\n *     3. Renames the JS file with suffix .min.js\r\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\r\n */\n\ngulp.task('customJS', () => {\n  return gulp.src(config.jsCustomSRC, {\n    since: gulp.lastRun('customJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env', // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n\n    }]]\n  })).pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsCustomFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(rename({\n    basename: config.jsCustomFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(notify({\n    message: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n    onLast: true\n  }));\n});\n/**\r\n * Task: `images`.\r\n *\r\n * Minifies PNG, JPEG, GIF and SVG images.\r\n *\r\n * This task does the following:\r\n *     1. Gets the source of images raw folder\r\n *     2. Minifies PNG, JPEG, GIF and SVG images\r\n *     3. Generates and saves the optimized images\r\n *\r\n * This task will run only once, if you want to run it\r\n * again, do it with the command `gulp images`.\r\n *\r\n * Read the following to change these options.\r\n * @link https://github.com/sindresorhus/gulp-imagemin\r\n */\n\ngulp.task('images', () => {\n  return gulp.src(config.imgSRC).pipe(cache(imagemin([imagemin.gifsicle({\n    interlaced: true\n  }), imagemin.mozjpeg({\n    quality: 90,\n    progressive: true\n  }), imagemin.optipng({\n    optimizationLevel: 3\n  }), // 0-7 low-high.\n  imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]))).pipe(gulp.dest(config.imgDST)).pipe(notify({\n    message: '\\n\\n✅  ===> IMAGES — completed!\\n',\n    onLast: true\n  }));\n});\n/**\r\n * Task: `clear-images-cache`.\r\n *\r\n * Deletes the images cache. By running the next \"images\" task,\r\n * each image will be regenerated.\r\n */\n\ngulp.task('clearCache', function (done) {\n  return cache.clearAll(done);\n});\n/**\r\n * WP POT Translation File Generator.\r\n *\r\n * This task does the following:\r\n * 1. Gets the source of all the PHP files\r\n * 2. Sort files in stream by path or any custom sort comparator\r\n * 3. Applies wpPot with the variable set at the top of this file\r\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\r\n */\n\ngulp.task('translate', () => {\n  return gulp.src(config.watchPhp).pipe(sort()).pipe(wpPot({\n    domain: config.textDomain,\n    package: config.packageName,\n    bugReport: config.bugReport,\n    lastTranslator: config.lastTranslator,\n    team: config.team\n  })).pipe(gulp.dest(config.translationDestination + '/' + config.translationFile)).pipe(notify({\n    message: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n    onLast: true\n  }));\n});\n/**\r\n * Zips theme or plugin and places in the parent directory\r\n *\r\n * zipIncludeGlob: Files to be included in the zip file\r\n * zipIgnoreGlob: Files to be ignored from the zip file\r\n * zipDestination: Must be a folder outside of the zip folder.\r\n * zipName: theme.zip or plugin.zip\r\n */\n\ngulp.task('zip', () => {\n  const src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\n  return gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\n});\n/**\r\n * Watch Tasks.\r\n *\r\n * Watches for file changes and runs specific tasks.\r\n */\n\ngulp.task('default', gulp.parallel('styles', 'vendorsJS', 'customJS', 'images', () => {\n  gulp.src([config.watchJsCustom]).pipe(webpackStream(webpackConfig), webpack) // webpack integration\n  .pipe(gulp.dest('./js'));\n  gulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n\n  gulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n\n  gulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n\n  gulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n} //browsersync\n));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["gulpfile.babel.js"],"names":["config","require","gulp","sass","sassGlob","minifycss","autoprefixer","mmq","rtlcss","concat","uglify","babel","imagemin","rename","lineec","filter","sourcemaps","notify","browserSync","create","wpPot","sort","cache","remember","plumber","beep","zip","webpack","webpackStream","webpackConfig","axios","errorHandler","r","onError","browsersync","done","init","proxy","projectURL","open","browserAutoOpen","injectChanges","watchEvents","reload","task","src","styleSRC","allowEmpty","pipe","errLogToConsole","precision","on","logError","write","includeContent","loadMaps","BROWSERS_LIST","dest","styleDestination","log","stream","suffix","maxLineLen","message","onLast","jsVendorSRC","since","lastRun","presets","targets","browsers","jsVendorFile","jsVendorDestination","basename","jsCustomSRC","jsCustomFile","jsCustomDestination","imgSRC","gifsicle","interlaced","mozjpeg","quality","progressive","optipng","optimizationLevel","svgo","plugins","removeViewBox","cleanupIDs","imgDST","clearAll","watchPhp","domain","textDomain","package","packageName","bugReport","lastTranslator","team","translationDestination","translationFile","zipIncludeGlob","zipIgnoreGlob","zipName","zipDestination","parallel","watchJsCustom","watch","watchStyles","watchJsVendor","series"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB,C,CAA8B;AAE9B;;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBA,OAAO,CAAC,MAAD,CAA5B,CAAb,C,CAAoD;;;AACpD,IAAIG,QAAQ,GAAGH,OAAO,CAAC,gBAAD,CAAtB,C,CAA0C;;;AAC1C,MAAMI,SAAS,GAAGJ,OAAO,CAAC,gBAAD,CAAzB,C,CAA6C;;;AAC7C,MAAMK,YAAY,GAAGL,OAAO,CAAC,mBAAD,CAA5B,C,CAAmD;;;AACnD,MAAMM,GAAG,GAAGN,OAAO,CAAC,0BAAD,CAAnB,C,CAAiD;;;AACjD,MAAMO,MAAM,GAAGP,OAAO,CAAC,aAAD,CAAtB,C,CAAuC;AAEvC;;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,aAAD,CAAtB,C,CAAuC;;;AACvC,MAAMS,MAAM,GAAGT,OAAO,CAAC,aAAD,CAAtB,C,CAAuC;;;AACvC,MAAMU,KAAK,GAAGV,OAAO,CAAC,YAAD,CAArB,C,CAAqC;AAErC;;;AACA,MAAMW,QAAQ,GAAGX,OAAO,CAAC,eAAD,CAAxB,C,CAA2C;AAE3C;;;AACA,MAAMY,MAAM,GAAGZ,OAAO,CAAC,aAAD,CAAtB,C,CAAuC;;;AACvC,MAAMa,MAAM,GAAGb,OAAO,CAAC,4BAAD,CAAtB,C,CAAsD;;;AACtD,MAAMc,MAAM,GAAGd,OAAO,CAAC,aAAD,CAAtB,C,CAAuC;;;AACvC,MAAMe,UAAU,GAAGf,OAAO,CAAC,iBAAD,CAA1B,C,CAA+C;;;AAC/C,MAAMgB,MAAM,GAAGhB,OAAO,CAAC,aAAD,CAAtB,C,CAAuC;;;AACvC,MAAMiB,WAAW,GAAGjB,OAAO,CAAC,cAAD,CAAP,CAAwBkB,MAAxB,EAApB,C,CAAsD;;;AACtD,MAAMC,KAAK,GAAGnB,OAAO,CAAC,aAAD,CAArB,C,CAAsC;;;AACtC,MAAMoB,IAAI,GAAGpB,OAAO,CAAC,WAAD,CAApB,C,CAAmC;;;AACnC,MAAMqB,KAAK,GAAGrB,OAAO,CAAC,YAAD,CAArB,C,CAAqC;;;AACrC,MAAMsB,QAAQ,GAAGtB,OAAO,CAAC,eAAD,CAAxB,C,CAA2C;;;AAC3C,MAAMuB,OAAO,GAAGvB,OAAO,CAAC,cAAD,CAAvB,C,CAAyC;;;AACzC,MAAMwB,IAAI,GAAGxB,OAAO,CAAC,UAAD,CAApB;;AACA,MAAMyB,GAAG,GAAGzB,OAAO,CAAC,UAAD,CAAnB,C,CAAiC;;;AACjC,MAAM0B,OAAO,GAAG1B,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM2B,aAAa,GAAG3B,OAAO,CAAC,gBAAD,CAA7B;;AACA,MAAM4B,aAAa,GAAG5B,OAAO,CAAC,qBAAD,CAA7B;;AACA,MAAM6B,KAAK,GAAG7B,OAAO,CAAC,OAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAM8B,YAAY,GAAGC,CAAC,IAAI;AACzBf,EAAAA,MAAM,CAACgB,OAAP,CAAe,2CAAf,EAA4DD,CAA5D;AACAP,EAAAA,IAAI,GAFqB,CAIzB;AACA,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMS,WAAW,GAAGC,IAAI,IAAI;AAC3BjB,EAAAA,WAAW,CAACkB,IAAZ,CAAiB;AAChBC,IAAAA,KAAK,EAAErC,MAAM,CAACsC,UADE;AAEhBC,IAAAA,IAAI,EAAEvC,MAAM,CAACwC,eAFG;AAGhBC,IAAAA,aAAa,EAAEzC,MAAM,CAACyC,aAHN;AAIhBC,IAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,EAA4B,QAA5B,EAAsC,WAAtC,CAJG;AAKhBzB,IAAAA,MAAM,EAAE;AALQ,GAAjB;AAOAkB,EAAAA,IAAI;AACJ,CATD,C,CAWA;;;AACA,MAAMQ,MAAM,GAAGR,IAAI,IAAI;AACtBjB,EAAAA,WAAW,CAACyB,MAAZ;AACAR,EAAAA,IAAI;AACJ,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAjC,IAAI,CAAC0C,IAAL,CAAU,QAAV,EAAoB,MAAM;AACzB,SAAO1C,IAAI,CACT2C,GADK,CACD7C,MAAM,CAAC8C,QADN,EACgB;AAACC,IAAAA,UAAU,EAAE;AAAb,GADhB,EAELC,IAFK,CAEAxB,OAAO,CAACO,YAAD,CAFP,EAGLiB,IAHK,CAGAhC,UAAU,CAACoB,IAAX,EAHA,EAILY,IAJK,CAIA5C,QAAQ,EAJR,EAKL4C,IALK,CAML7C,IAAI,CAAC;AACJ8C,IAAAA,eAAe,EAAEjD,MAAM,CAACiD,eADpB;AAEJ;AACAC,IAAAA,SAAS,EAAElD,MAAM,CAACkD;AAHd,GAAD,CANC,EAYLC,EAZK,CAYF,OAZE,EAYOhD,IAAI,CAACiD,QAZZ,EAaLJ,IAbK,CAaAhC,UAAU,CAACqC,KAAX,CAAiB;AAACC,IAAAA,cAAc,EAAE;AAAjB,GAAjB,CAbA,EAcLN,IAdK,CAcAhC,UAAU,CAACoB,IAAX,CAAgB;AAACmB,IAAAA,QAAQ,EAAE;AAAX,GAAhB,CAdA,EAeLP,IAfK,CAeA1C,YAAY,CAACN,MAAM,CAACwD,aAAR,CAfZ,EAgBLR,IAhBK,CAgBAhC,UAAU,CAACqC,KAAX,CAAiB,IAAjB,CAhBA,EAiBLL,IAjBK,CAiBAlC,MAAM,EAjBN,EAiBU;AAjBV,GAkBLkC,IAlBK,CAkBA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAAC0D,gBAAjB,CAlBA,EAmBLV,IAnBK,CAmBAjC,MAAM,CAAC,UAAD,CAnBN,EAmBoB;AAnBpB,GAoBLiC,IApBK,CAoBAzC,GAAG,CAAC;AAACoD,IAAAA,GAAG,EAAE;AAAN,GAAD,CApBH,EAoBkB;AApBlB,GAqBLX,IArBK,CAqBA9B,WAAW,CAAC0C,MAAZ,EArBA,EAqBsB;AArBtB,GAsBLZ,IAtBK,CAsBAnC,MAAM,CAAC;AAACgD,IAAAA,MAAM,EAAE;AAAT,GAAD,CAtBN,EAuBLb,IAvBK,CAuBA3C,SAAS,CAAC;AAACyD,IAAAA,UAAU,EAAE;AAAb,GAAD,CAvBT,EAwBLd,IAxBK,CAwBAlC,MAAM,EAxBN,EAwBU;AAxBV,GAyBLkC,IAzBK,CAyBA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAAC0D,gBAAjB,CAzBA,EA0BLV,IA1BK,CA0BAjC,MAAM,CAAC,UAAD,CA1BN,EA0BoB;AA1BpB,GA2BLiC,IA3BK,CA2BA9B,WAAW,CAAC0C,MAAZ,EA3BA,EA2BsB;AA3BtB,GA4BLZ,IA5BK,CA6BL/B,MAAM,CAAC;AACN8C,IAAAA,OAAO,EAAE,mCADH;AAENC,IAAAA,MAAM,EAAE;AAFF,GAAD,CA7BD,CAAP;AAkCA,CAnCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9D,IAAI,CAAC0C,IAAL,CAAU,WAAV,EAAuB,MAAM;AAC5B,SAAO1C,IAAI,CACT2C,GADK,CACD7C,MAAM,CAAC8C,QADN,EACgB;AAACC,IAAAA,UAAU,EAAE;AAAb,GADhB,EAELC,IAFK,CAEAxB,OAAO,CAACO,YAAD,CAFP,EAGLiB,IAHK,CAGAhC,UAAU,CAACoB,IAAX,EAHA,EAILY,IAJK,CAKL7C,IAAI,CAAC;AACJ8C,IAAAA,eAAe,EAAEjD,MAAM,CAACiD,eADpB;AAEJ;AACAC,IAAAA,SAAS,EAAElD,MAAM,CAACkD;AAHd,GAAD,CALC,EAWLC,EAXK,CAWF,OAXE,EAWOhD,IAAI,CAACiD,QAXZ,EAYLJ,IAZK,CAYAhC,UAAU,CAACqC,KAAX,CAAiB;AAACC,IAAAA,cAAc,EAAE;AAAjB,GAAjB,CAZA,EAaLN,IAbK,CAaAhC,UAAU,CAACoB,IAAX,CAAgB;AAACmB,IAAAA,QAAQ,EAAE;AAAX,GAAhB,CAbA,EAcLP,IAdK,CAcA1C,YAAY,CAACN,MAAM,CAACwD,aAAR,CAdZ,EAeLR,IAfK,CAeAlC,MAAM,EAfN,EAeU;AAfV,GAgBLkC,IAhBK,CAgBAnC,MAAM,CAAC;AAACgD,IAAAA,MAAM,EAAE;AAAT,GAAD,CAhBN,EAgB0B;AAhB1B,GAiBLb,IAjBK,CAiBAxC,MAAM,EAjBN,EAiBU;AAjBV,GAkBLwC,IAlBK,CAkBAhC,UAAU,CAACqC,KAAX,CAAiB,IAAjB,CAlBA,EAkBwB;AAlBxB,GAmBLL,IAnBK,CAmBA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAAC0D,gBAAjB,CAnBA,EAoBLV,IApBK,CAoBAjC,MAAM,CAAC,UAAD,CApBN,EAoBoB;AApBpB,GAqBLiC,IArBK,CAqBA9B,WAAW,CAAC0C,MAAZ,EArBA,EAqBsB;AArBtB,GAsBLZ,IAtBK,CAsBAzC,GAAG,CAAC;AAACoD,IAAAA,GAAG,EAAE;AAAN,GAAD,CAtBH,EAsBkB;AAtBlB,GAuBLX,IAvBK,CAuBAnC,MAAM,CAAC;AAACgD,IAAAA,MAAM,EAAE;AAAT,GAAD,CAvBN,EAwBLb,IAxBK,CAwBA3C,SAAS,CAAC;AAACyD,IAAAA,UAAU,EAAE;AAAb,GAAD,CAxBT,EAyBLd,IAzBK,CAyBAlC,MAAM,EAzBN,EAyBU;AAzBV,GA0BLkC,IA1BK,CA0BA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAAC0D,gBAAjB,CA1BA,EA2BLV,IA3BK,CA2BAjC,MAAM,CAAC,UAAD,CA3BN,EA2BoB;AA3BpB,GA4BLiC,IA5BK,CA4BA9B,WAAW,CAAC0C,MAAZ,EA5BA,EA4BsB;AA5BtB,GA6BLZ,IA7BK,CA8BL/B,MAAM,CAAC;AACN8C,IAAAA,OAAO,EAAE,uCADH;AAENC,IAAAA,MAAM,EAAE;AAFF,GAAD,CA9BD,CAAP;AAmCA,CApCD;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9D,IAAI,CAAC0C,IAAL,CAAU,WAAV,EAAuB,MAAM;AAC5B,SAAO1C,IAAI,CACT2C,GADK,CACD7C,MAAM,CAACiE,WADN,EACmB;AAACC,IAAAA,KAAK,EAAEhE,IAAI,CAACiE,OAAL,CAAa,WAAb;AAAR,GADnB,EACuD;AADvD,GAELnB,IAFK,CAEAxB,OAAO,CAACO,YAAD,CAFP,EAGLiB,IAHK,CAILrC,KAAK,CAAC;AACLyD,IAAAA,OAAO,EAAE,CACR,CACC,mBADD,EACsB;AACrB;AACCC,MAAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAEtE,MAAM,CAACwD;AAAlB,OADV,CAC2C;;AAD3C,KAFD,CADQ;AADJ,GAAD,CAJA,EAeLR,IAfK,CAeAzB,QAAQ,CAACvB,MAAM,CAACiE,WAAR,CAfR,EAe8B;AAf9B,GAgBLjB,IAhBK,CAgBAvC,MAAM,CAACT,MAAM,CAACuE,YAAP,GAAsB,KAAvB,CAhBN,EAiBLvB,IAjBK,CAiBAlC,MAAM,EAjBN,EAiBU;AAjBV,GAkBLkC,IAlBK,CAkBA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAACwE,mBAAjB,CAlBA,EAmBLxB,IAnBK,CAoBLnC,MAAM,CAAC;AACN4D,IAAAA,QAAQ,EAAEzE,MAAM,CAACuE,YADX;AAENV,IAAAA,MAAM,EAAE;AAFF,GAAD,CApBD,EAyBLb,IAzBK,CAyBAtC,MAAM,EAzBN,EA0BLsC,IA1BK,CA0BAlC,MAAM,EA1BN,EA0BU;AA1BV,GA2BLkC,IA3BK,CA2BA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAACwE,mBAAjB,CA3BA,EA4BLxB,IA5BK,CA6BL/B,MAAM,CAAC;AACN8C,IAAAA,OAAO,EAAE,sCADH;AAENC,IAAAA,MAAM,EAAE;AAFF,GAAD,CA7BD,CAAP;AAkCA,CAnCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9D,IAAI,CAAC0C,IAAL,CAAU,UAAV,EAAsB,MAAM;AAC3B,SAAO1C,IAAI,CACT2C,GADK,CACD7C,MAAM,CAAC0E,WADN,EACmB;AAACR,IAAAA,KAAK,EAAEhE,IAAI,CAACiE,OAAL,CAAa,UAAb;AAAR,GADnB,EACsD;AADtD,GAELnB,IAFK,CAEAxB,OAAO,CAACO,YAAD,CAFP,EAGLiB,IAHK,CAILrC,KAAK,CAAC;AACLyD,IAAAA,OAAO,EAAE,CACR,CACC,mBADD,EACsB;AACrB;AACCC,MAAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAEtE,MAAM,CAACwD;AAAlB,OADV,CAC2C;;AAD3C,KAFD,CADQ;AADJ,GAAD,CAJA,EAeLR,IAfK,CAeAzB,QAAQ,CAACvB,MAAM,CAAC0E,WAAR,CAfR,EAe8B;AAf9B,GAgBL1B,IAhBK,CAgBAvC,MAAM,CAACT,MAAM,CAAC2E,YAAP,GAAsB,KAAvB,CAhBN,EAiBL3B,IAjBK,CAiBAlC,MAAM,EAjBN,EAiBU;AAjBV,GAkBLkC,IAlBK,CAkBA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAAC4E,mBAAjB,CAlBA,EAmBL5B,IAnBK,CAoBLnC,MAAM,CAAC;AACN4D,IAAAA,QAAQ,EAAEzE,MAAM,CAAC2E,YADX;AAENd,IAAAA,MAAM,EAAE;AAFF,GAAD,CApBD,EAyBLb,IAzBK,CAyBAtC,MAAM,EAzBN,EA0BLsC,IA1BK,CA0BAlC,MAAM,EA1BN,EA0BU;AA1BV,GA2BLkC,IA3BK,CA2BA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAAC4E,mBAAjB,CA3BA,EA4BL5B,IA5BK,CA6BL/B,MAAM,CAAC;AACN8C,IAAAA,OAAO,EAAE,sCADH;AAENC,IAAAA,MAAM,EAAE;AAFF,GAAD,CA7BD,CAAP;AAkCA,CAnCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9D,IAAI,CAAC0C,IAAL,CAAU,QAAV,EAAoB,MAAM;AACzB,SAAO1C,IAAI,CACT2C,GADK,CACD7C,MAAM,CAAC6E,MADN,EAEL7B,IAFK,CAGL1B,KAAK,CACJV,QAAQ,CAAC,CACRA,QAAQ,CAACkE,QAAT,CAAkB;AAACC,IAAAA,UAAU,EAAE;AAAb,GAAlB,CADQ,EAERnE,QAAQ,CAACoE,OAAT,CAAiB;AAACC,IAAAA,OAAO,EAAE,EAAV;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAAjB,CAFQ,EAGRtE,QAAQ,CAACuE,OAAT,CAAiB;AAACC,IAAAA,iBAAiB,EAAE;AAApB,GAAjB,CAHQ,EAGkC;AAC1CxE,EAAAA,QAAQ,CAACyE,IAAT,CAAc;AACbC,IAAAA,OAAO,EAAE,CAAC;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAD,EAAwB;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAxB;AADI,GAAd,CAJQ,CAAD,CADJ,CAHA,EAcLxC,IAdK,CAcA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAACyF,MAAjB,CAdA,EAeLzC,IAfK,CAgBL/B,MAAM,CAAC;AACN8C,IAAAA,OAAO,EAAE,mCADH;AAENC,IAAAA,MAAM,EAAE;AAFF,GAAD,CAhBD,CAAP;AAqBA,CAtBD;AAwBA;AACA;AACA;AACA;AACA;AACA;;AACA9D,IAAI,CAAC0C,IAAL,CAAU,YAAV,EAAwB,UAAUT,IAAV,EAAgB;AACvC,SAAOb,KAAK,CAACoE,QAAN,CAAevD,IAAf,CAAP;AACA,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAjC,IAAI,CAAC0C,IAAL,CAAU,WAAV,EAAuB,MAAM;AAC5B,SAAO1C,IAAI,CACT2C,GADK,CACD7C,MAAM,CAAC2F,QADN,EAEL3C,IAFK,CAEA3B,IAAI,EAFJ,EAGL2B,IAHK,CAIL5B,KAAK,CAAC;AACLwE,IAAAA,MAAM,EAAE5F,MAAM,CAAC6F,UADV;AAELC,IAAAA,OAAO,EAAE9F,MAAM,CAAC+F,WAFX;AAGLC,IAAAA,SAAS,EAAEhG,MAAM,CAACgG,SAHb;AAILC,IAAAA,cAAc,EAAEjG,MAAM,CAACiG,cAJlB;AAKLC,IAAAA,IAAI,EAAElG,MAAM,CAACkG;AALR,GAAD,CAJA,EAYLlD,IAZK,CAYA9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAACmG,sBAAP,GAAgC,GAAhC,GAAsCnG,MAAM,CAACoG,eAAvD,CAZA,EAaLpD,IAbK,CAcL/B,MAAM,CAAC;AACN8C,IAAAA,OAAO,EAAE,sCADH;AAENC,IAAAA,MAAM,EAAE;AAFF,GAAD,CAdD,CAAP;AAmBA,CApBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9D,IAAI,CAAC0C,IAAL,CAAU,KAAV,EAAiB,MAAM;AACtB,QAAMC,GAAG,GAAG,CAAC,GAAG7C,MAAM,CAACqG,cAAX,EAA2B,GAAGrG,MAAM,CAACsG,aAArC,CAAZ;AACA,SAAOpG,IAAI,CAAC2C,GAAL,CAASA,GAAT,EAAcG,IAAd,CAAmBtB,GAAG,CAAC1B,MAAM,CAACuG,OAAR,CAAtB,EAAwCvD,IAAxC,CAA6C9C,IAAI,CAACuD,IAAL,CAAUzD,MAAM,CAACwG,cAAjB,CAA7C,CAAP;AACA,CAHD;AAKA;AACA;AACA;AACA;AACA;;AACAtG,IAAI,CAAC0C,IAAL,CACC,SADD,EAEC1C,IAAI,CAACuG,QAAL,CAAc,QAAd,EAAwB,WAAxB,EAAqC,UAArC,EAAiD,QAAjD,EAA2D,MAAM;AAChEvG,EAAAA,IAAI,CAAC2C,GAAL,CAAS,CAAC7C,MAAM,CAAC0G,aAAR,CAAT,EACE1D,IADF,CACOpB,aAAa,CAACC,aAAD,CADpB,EACqCF,OADrC,EAC8C;AAD9C,GAEEqB,IAFF,CAEO9C,IAAI,CAACuD,IAAL,CAAU,MAAV,CAFP;AAGAvD,EAAAA,IAAI,CAACyG,KAAL,CAAW3G,MAAM,CAAC2F,QAAlB,EAA4BhD,MAA5B,EAJgE,CAI3B;;AACrCzC,EAAAA,IAAI,CAACyG,KAAL,CAAW3G,MAAM,CAAC4G,WAAlB,EAA+B1G,IAAI,CAACuG,QAAL,CAAc,QAAd,CAA/B,EALgE,CAKP;;AACzDvG,EAAAA,IAAI,CAACyG,KAAL,CAAW3G,MAAM,CAAC6G,aAAlB,EAAiC3G,IAAI,CAAC4G,MAAL,CAAY,WAAZ,EAAyBnE,MAAzB,CAAjC,EANgE,CAMI;;AACpEzC,EAAAA,IAAI,CAACyG,KAAL,CAAW3G,MAAM,CAAC6E,MAAlB,EAA0B3E,IAAI,CAAC4G,MAAL,CAAY,QAAZ,EAAsBnE,MAAtB,CAA1B,EAPgE,CAON;AAC1D,CARD,CASA;AATA,CAFD","sourceRoot":"C:\\xampp\\htdocs\\avada\\wp-content\\themes\\360-company\\","sourcesContent":["/**\r\n * Gulpfile.\r\n *\r\n * Gulp with WordPress.\r\n *\r\n * Implements:\r\n *      1. Live reloads browser with BrowserSync.\r\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\r\n *         CSS minification, and Merge Media Queries.\r\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\r\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\r\n *      5. Watches files for changes in CSS or JS.\r\n *      6. Watches files for changes in PHP.\r\n *      7. Corrects the line endings.\r\n *      8. InjectCSS instead of browser page reload.\r\n *      9. Generates .pot file for i18n and l10n.\r\n *\r\n * @tutorial https://github.com/ahmadawais/WPGulp\r\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\r\n */\r\n\r\n/**\r\n * Load WPGulp Configuration.\r\n *\r\n * TODO: Customize your project in the wpgulp.js file.\r\n */\r\nconst config = require('./wpgulp.config.js');\r\n\r\n/**\r\n * Load Plugins.\r\n *\r\n * Load gulp plugins and passing them semantic names.\r\n */\r\nconst gulp = require('gulp'); // Gulp of-course.\r\n\r\n// CSS related plugins.\r\nconst sass = require('gulp-sass')(require('sass')); // Gulp plugin for Sass compilation.\r\nvar sassGlob = require('gulp-sass-glob'); //Global paths \r\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\r\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\r\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\r\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\r\n\r\n// JS related plugins.\r\nconst concat = require('gulp-concat'); // Concatenates JS files.\r\nconst uglify = require('gulp-uglify'); // Minifies JS files.\r\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\r\n\r\n// Image related plugins.\r\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\r\n\r\n// Utility related plugins.\r\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\r\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\r\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\r\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\r\nconst notify = require('gulp-notify'); // Sends message notification to you.\r\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\r\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\r\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\r\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\r\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\r\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\r\nconst beep = require('beepbeep');\r\nconst zip = require('gulp-zip'); // Zip plugin or theme file.\r\nconst webpack = require('webpack');\r\nconst webpackStream = require('webpack-stream');\r\nconst webpackConfig = require('./webpack.config.js');\r\nconst axios = require('axios');\r\n\r\n/**\r\n * Custom Error Handler.\r\n *\r\n * @param Mixed err\r\n */\r\nconst errorHandler = r => {\r\n\tnotify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\r\n\tbeep();\r\n\r\n\t// this.emit('end');\r\n};\r\n\r\n/**\r\n * Task: `browser-sync`.\r\n *\r\n * Live Reloads, CSS injections, Localhost tunneling.\r\n * @link http://www.browsersync.io/docs/options/\r\n *\r\n * @param {Mixed} done Done.\r\n */\r\nconst browsersync = done => {\r\n\tbrowserSync.init({\t\t\t\t\r\n\t\tproxy: config.projectURL,\r\n\t\topen: config.browserAutoOpen,\r\n\t\tinjectChanges: config.injectChanges,\r\n\t\twatchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir'],\r\n\t\tnotify: false\r\n\t});\r\n\tdone();\r\n};\r\n\r\n// Helper function to allow browser reload with Gulp 4.\r\nconst reload = done => {\r\n\tbrowserSync.reload();\r\n\tdone();\r\n};\r\n\r\n/**\r\n * Task: `styles`.\r\n *\r\n * Compiles Sass, Autoprefixes it and Minifies CSS.\r\n *\r\n * This task does the following:\r\n *    1. Gets the source scss file\r\n *    2. Compiles Sass to CSS\r\n *    3. Writes Sourcemaps for it\r\n *    4. Autoprefixes it and generates style.css\r\n *    5. Renames the CSS file with suffix .min.css\r\n *    6. Minifies the CSS file and generates style.min.css\r\n *    7. Injects CSS or reloads the browser via browserSync\r\n */\r\ngulp.task('styles', () => {\r\n\treturn gulp\r\n\t\t.src(config.styleSRC, {allowEmpty: true})\r\n\t\t.pipe(plumber(errorHandler))\r\n\t\t.pipe(sourcemaps.init())\r\n\t\t.pipe(sassGlob())\r\n\t\t.pipe(\r\n\t\t\tsass({\r\n\t\t\t\terrLogToConsole: config.errLogToConsole,\r\n\t\t\t\t//outputStyle: config.outputStyle,\r\n\t\t\t\tprecision: config.precision\r\n\t\t\t})\r\n\t\t)\r\n\t\t.on('error', sass.logError)\r\n\t\t.pipe(sourcemaps.write({includeContent: false}))\r\n\t\t.pipe(sourcemaps.init({loadMaps: true}))\r\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\r\n\t\t.pipe(sourcemaps.write('./'))\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.styleDestination))\r\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\r\n\t\t.pipe(mmq({log: true})) // Merge Media Queries only for .min.css version.\r\n\t\t.pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\r\n\t\t.pipe(rename({suffix: '.min'}))\r\n\t\t.pipe(minifycss({maxLineLen: 10}))\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.styleDestination))\r\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\r\n\t\t.pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\r\n\t\t.pipe(\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: '\\n\\n✅  ===> STYLES — completed!\\n',\r\n\t\t\t\tonLast: true\r\n\t\t\t})\r\n\t\t);\r\n});\r\n\r\n/**\r\n * Task: `stylesRTL`.\r\n *\r\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\r\n *\r\n * This task does the following:\r\n *    1. Gets the source scss file\r\n *    2. Compiles Sass to CSS\r\n *    4. Autoprefixes it and generates style.css\r\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\r\n *    6. Writes Sourcemaps for style-rtl.css\r\n *    7. Renames the CSS files with suffix .min.css\r\n *    8. Minifies the CSS file and generates style-rtl.min.css\r\n *    9. Injects CSS or reloads the browser via browserSync\r\n */\r\ngulp.task('stylesRTL', () => {\r\n\treturn gulp\r\n\t\t.src(config.styleSRC, {allowEmpty: true})\r\n\t\t.pipe(plumber(errorHandler))\r\n\t\t.pipe(sourcemaps.init())\r\n\t\t.pipe(\r\n\t\t\tsass({\r\n\t\t\t\terrLogToConsole: config.errLogToConsole,\r\n\t\t\t\t//outputStyle: config.outputStyle,\r\n\t\t\t\tprecision: config.precision\r\n\t\t\t})\r\n\t\t)\r\n\t\t.on('error', sass.logError)\r\n\t\t.pipe(sourcemaps.write({includeContent: false}))\r\n\t\t.pipe(sourcemaps.init({loadMaps: true}))\r\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(rename({suffix: '-rtl'})) // Append \"-rtl\" to the filename.\r\n\t\t.pipe(rtlcss()) // Convert to RTL.\r\n\t\t.pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\r\n\t\t.pipe(gulp.dest(config.styleDestination))\r\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\r\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\r\n\t\t.pipe(mmq({log: true})) // Merge Media Queries only for .min.css version.\r\n\t\t.pipe(rename({suffix: '.min'}))\r\n\t\t.pipe(minifycss({maxLineLen: 10}))\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.styleDestination))\r\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\r\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\r\n\t\t.pipe(\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\r\n\t\t\t\tonLast: true\r\n\t\t\t})\r\n\t\t);\r\n});\r\n\r\n/**\r\n * Task: `vendorsJS`.\r\n *\r\n * Concatenate and uglify vendor JS scripts.\r\n *\r\n * This task does the following:\r\n *     1. Gets the source folder for JS vendor files\r\n *     2. Concatenates all the files and generates vendors.js\r\n *     3. Renames the JS file with suffix .min.js\r\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\r\n */\r\ngulp.task('vendorsJS', () => {\r\n\treturn gulp\r\n\t\t.src(config.jsVendorSRC, {since: gulp.lastRun('vendorsJS')}) // Only run on changed files.\r\n\t\t.pipe(plumber(errorHandler))\r\n\t\t.pipe(\r\n\t\t\tbabel({\r\n\t\t\t\tpresets: [\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttargets: {browsers: config.BROWSERS_LIST} // Target browser list to support.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\r\n\t\t.pipe(concat(config.jsVendorFile + '.js'))\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\r\n\t\t.pipe(\r\n\t\t\trename({\r\n\t\t\t\tbasename: config.jsVendorFile,\r\n\t\t\t\tsuffix: '.min'\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(uglify())\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\r\n\t\t.pipe(\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\r\n\t\t\t\tonLast: true\r\n\t\t\t})\r\n\t\t);\r\n});\r\n\r\n/**\r\n * Task: `customJS`.\r\n *\r\n * Concatenate and uglify custom JS scripts.\r\n *\r\n * This task does the following:\r\n *     1. Gets the source folder for JS custom files\r\n *     2. Concatenates all the files and generates custom.js\r\n *     3. Renames the JS file with suffix .min.js\r\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\r\n */\r\ngulp.task('customJS', () => {\r\n\treturn gulp\r\n\t\t.src(config.jsCustomSRC, {since: gulp.lastRun('customJS')}) // Only run on changed files.\r\n\t\t.pipe(plumber(errorHandler))\r\n\t\t.pipe(\r\n\t\t\tbabel({\r\n\t\t\t\tpresets: [\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttargets: {browsers: config.BROWSERS_LIST} // Target browser list to support.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\r\n\t\t.pipe(concat(config.jsCustomFile + '.js'))\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\r\n\t\t.pipe(\r\n\t\t\trename({\r\n\t\t\t\tbasename: config.jsCustomFile,\r\n\t\t\t\tsuffix: '.min'\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(uglify())\r\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\r\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\r\n\t\t.pipe(\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\r\n\t\t\t\tonLast: true\r\n\t\t\t})\r\n\t\t);\r\n});\r\n\r\n/**\r\n * Task: `images`.\r\n *\r\n * Minifies PNG, JPEG, GIF and SVG images.\r\n *\r\n * This task does the following:\r\n *     1. Gets the source of images raw folder\r\n *     2. Minifies PNG, JPEG, GIF and SVG images\r\n *     3. Generates and saves the optimized images\r\n *\r\n * This task will run only once, if you want to run it\r\n * again, do it with the command `gulp images`.\r\n *\r\n * Read the following to change these options.\r\n * @link https://github.com/sindresorhus/gulp-imagemin\r\n */\r\ngulp.task('images', () => {\r\n\treturn gulp\r\n\t\t.src(config.imgSRC)\r\n\t\t.pipe(\r\n\t\t\tcache(\r\n\t\t\t\timagemin([\r\n\t\t\t\t\timagemin.gifsicle({interlaced: true}),\r\n\t\t\t\t\timagemin.mozjpeg({quality: 90, progressive: true}),\r\n\t\t\t\t\timagemin.optipng({optimizationLevel: 3}), // 0-7 low-high.\r\n\t\t\t\t\timagemin.svgo({\r\n\t\t\t\t\t\tplugins: [{removeViewBox: true}, {cleanupIDs: false}]\r\n\t\t\t\t\t})\r\n\t\t\t\t])\r\n\t\t\t)\r\n\t\t)\r\n\t\t.pipe(gulp.dest(config.imgDST))\r\n\t\t.pipe(\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: '\\n\\n✅  ===> IMAGES — completed!\\n',\r\n\t\t\t\tonLast: true\r\n\t\t\t})\r\n\t\t);\r\n});\r\n\r\n/**\r\n * Task: `clear-images-cache`.\r\n *\r\n * Deletes the images cache. By running the next \"images\" task,\r\n * each image will be regenerated.\r\n */\r\ngulp.task('clearCache', function (done) {\r\n\treturn cache.clearAll(done);\r\n});\r\n\r\n/**\r\n * WP POT Translation File Generator.\r\n *\r\n * This task does the following:\r\n * 1. Gets the source of all the PHP files\r\n * 2. Sort files in stream by path or any custom sort comparator\r\n * 3. Applies wpPot with the variable set at the top of this file\r\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\r\n */\r\ngulp.task('translate', () => {\r\n\treturn gulp\r\n\t\t.src(config.watchPhp)\r\n\t\t.pipe(sort())\r\n\t\t.pipe(\r\n\t\t\twpPot({\r\n\t\t\t\tdomain: config.textDomain,\r\n\t\t\t\tpackage: config.packageName,\r\n\t\t\t\tbugReport: config.bugReport,\r\n\t\t\t\tlastTranslator: config.lastTranslator,\r\n\t\t\t\tteam: config.team\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(gulp.dest(config.translationDestination + '/' + config.translationFile))\r\n\t\t.pipe(\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\r\n\t\t\t\tonLast: true\r\n\t\t\t})\r\n\t\t);\r\n});\r\n\r\n/**\r\n * Zips theme or plugin and places in the parent directory\r\n *\r\n * zipIncludeGlob: Files to be included in the zip file\r\n * zipIgnoreGlob: Files to be ignored from the zip file\r\n * zipDestination: Must be a folder outside of the zip folder.\r\n * zipName: theme.zip or plugin.zip\r\n */\r\ngulp.task('zip', () => {\r\n\tconst src = [...config.zipIncludeGlob, ...config.zipIgnoreGlob];\r\n\treturn gulp.src(src).pipe(zip(config.zipName)).pipe(gulp.dest(config.zipDestination));\r\n});\r\n\r\n/**\r\n * Watch Tasks.\r\n *\r\n * Watches for file changes and runs specific tasks.\r\n */\r\ngulp.task(\r\n\t'default',\t\r\n\tgulp.parallel('styles', 'vendorsJS', 'customJS', 'images', () => {\r\n\t\tgulp.src([config.watchJsCustom])\r\n\t\t\t.pipe(webpackStream(webpackConfig), webpack) // webpack integration\r\n\t\t\t.pipe(gulp.dest('./js'));\r\n\t\tgulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\r\n\t\tgulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\r\n\t\tgulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\r\n\t\tgulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\r\n\t},\r\n\t//browsersync\r\n\t)\r\n);\r\n"]}},"mtime":1648768932274},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\\\\wpgulp.config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.17.8:development":{"value":{"code":"/**\r\n * WPGulp Configuration File\r\n *\r\n * 1. Edit the variables as per your project requirements.\r\n * 2. In paths you can add <<glob or array of globs>>.\r\n *\r\n * @package WPGulp\r\n */\n// Project options.\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = 'localhost:8000'; // Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\n\nconst productURL = './';\nconst browserAutoOpen = false;\nconst injectChanges = true; // >>>>> Style options.\n// Path to main .scss file.\n\nconst styleSRC = './assets/sass/style.scss'; // Path to place the compiled CSS file. Default set to root folder.\n\nconst styleDestination = './css/'; // Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\n\nconst outputStyle = 'compact';\nconst errLogToConsole = true;\nconst precision = 10; // JS Vendor options.\n// Path to JS vendor folder.\n\nconst jsVendorSRC = './assets/js/vendor/*.js'; // Path to place the compiled JS vendors file.\n\nconst jsVendorDestination = './js/'; // Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\n\nconst jsVendorFile = 'vendor'; // JS Custom options.\n// Path to JS custom scripts folder.\n\nconst jsCustomSRC = './assets/js/custom/*.js'; // Path to place the compiled JS custom scripts file.\n\nconst jsCustomDestination = './js/'; // Compiled JS custom file name. Default set to custom i.e. custom.js.\n\nconst jsCustomFile = 'scripts'; // Images options.\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\n\nconst imgSRC = './assets/img/raw/**/*'; // Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\n\nconst imgDST = './assets/img/'; // >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\n\nconst watchStyles = './assets/sass/**/*.scss'; // Path to all vendor JS files.\n\nconst watchJsVendor = './assets/js/vendor/*.js'; // Path to all custom JS files.\n\nconst watchJsCustom = './assets/js/custom/*.js'; // Path to all PHP files.\n\nconst watchPhp = './**/*.php'; // >>>>> Zip file config.\n// Must have.zip at the end.\n\nconst zipName = 'file.zip'; // Must be a folder outside of the zip folder.\n\nconst zipDestination = './../'; // Default: Parent folder.\n\nconst zipIncludeGlob = ['./**/*']; // Default: Include all files/folders in current directory.\n// Default ignored files and folders for the zip file.\n\nconst zipIgnoreGlob = ['!./{node_modules,node_modules/**/*}', '!./.git', '!./.svn', '!./gulpfile.babel.js', '!./wpgulp.config.js', '!./.eslintrc.js', '!./.eslintignore', '!./.editorconfig', '!./phpcs.xml.dist', '!./vscode', '!./package.json', '!./package-lock.json', '!./assets/css/**/*', '!./assets/css', '!./assets/img/raw/**/*', '!./assets/img/raw', `!${imgSRC}`, `!${styleSRC}`, `!${jsCustomSRC}`, `!${jsVendorSRC}`]; // >>>>> Translation options.\n// Your text domain here.\n\nconst textDomain = 'WPGULP'; // Name of the translation file.\n\nconst translationFile = 'WPGULP.pot'; // Where to save the translation files.\n\nconst translationDestination = './languages'; // Package name.\n\nconst packageName = 'WPGULP'; // Where can users report bugs.\n\nconst bugReport = 'https://AhmadAwais.com/contact/'; // Last translator Email ID.\n\nconst lastTranslator = 'Ahmad Awais <your_email@email.com>'; // Team's Email ID.\n\nconst team = 'AhmadAwais <your_email@email.com>'; // Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\n\nconst BROWSERS_LIST = ['last 2 version', '> 1%']; // Export.\n\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  //outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["wpgulp.config.js"],"names":["projectURL","productURL","browserAutoOpen","injectChanges","styleSRC","styleDestination","outputStyle","errLogToConsole","precision","jsVendorSRC","jsVendorDestination","jsVendorFile","jsCustomSRC","jsCustomDestination","jsCustomFile","imgSRC","imgDST","watchStyles","watchJsVendor","watchJsCustom","watchPhp","zipName","zipDestination","zipIncludeGlob","zipIgnoreGlob","textDomain","translationFile","translationDestination","packageName","bugReport","lastTranslator","team","BROWSERS_LIST","module","exports"],"mappings":"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","sourceRoot":"C:\\xampp\\htdocs\\avada\\wp-content\\themes\\360-company\\","sourcesContent":["/**\r\n * WPGulp Configuration File\r\n *\r\n * 1. Edit the variables as per your project requirements.\r\n * 2. In paths you can add <<glob or array of globs>>.\r\n *\r\n * @package WPGulp\r\n */\r\n\r\n// Project options.\r\n\r\n// Local project URL of your already running WordPress site.\r\n// > Could be something like \"wpgulp.local\" or \"localhost\"\r\n// > depending upon your local WordPress setup.\r\nconst projectURL = 'localhost:8000';\r\n\r\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\r\nconst productURL = './';\r\nconst browserAutoOpen = false;\r\nconst injectChanges = true;\r\n\r\n// >>>>> Style options.\r\n// Path to main .scss file.\r\nconst styleSRC = './assets/sass/style.scss';\r\n\r\n// Path to place the compiled CSS file. Default set to root folder.\r\nconst styleDestination = './css/';\r\n\r\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\r\nconst outputStyle = 'compact';\r\nconst errLogToConsole = true;\r\nconst precision = 10;\r\n\r\n// JS Vendor options.\r\n\r\n// Path to JS vendor folder.\r\nconst jsVendorSRC = './assets/js/vendor/*.js';\r\n\r\n// Path to place the compiled JS vendors file.\r\nconst jsVendorDestination = './js/';\r\n\r\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\r\nconst jsVendorFile = 'vendor';\r\n\r\n// JS Custom options.\r\n\r\n// Path to JS custom scripts folder.\r\nconst jsCustomSRC = './assets/js/custom/*.js';\r\n\r\n// Path to place the compiled JS custom scripts file.\r\nconst jsCustomDestination = './js/';\r\n\r\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\r\nconst jsCustomFile = 'scripts';\r\n\r\n// Images options.\r\n\r\n// Source folder of images which should be optimized and watched.\r\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\r\nconst imgSRC = './assets/img/raw/**/*';\r\n\r\n// Destination folder of optimized images.\r\n// > Must be different from the imagesSRC folder.\r\nconst imgDST = './assets/img/';\r\n\r\n// >>>>> Watch files paths.\r\n// Path to all *.scss files inside css folder and inside them.\r\nconst watchStyles = './assets/sass/**/*.scss';\r\n\r\n// Path to all vendor JS files.\r\nconst watchJsVendor = './assets/js/vendor/*.js';\r\n\r\n// Path to all custom JS files.\r\nconst watchJsCustom = './assets/js/custom/*.js';\r\n\r\n// Path to all PHP files.\r\nconst watchPhp = './**/*.php';\r\n\r\n// >>>>> Zip file config.\r\n// Must have.zip at the end.\r\nconst zipName = 'file.zip';\r\n\r\n// Must be a folder outside of the zip folder.\r\nconst zipDestination = './../'; // Default: Parent folder.\r\nconst zipIncludeGlob = ['./**/*']; // Default: Include all files/folders in current directory.\r\n\r\n// Default ignored files and folders for the zip file.\r\nconst zipIgnoreGlob = [\r\n\t'!./{node_modules,node_modules/**/*}',\r\n\t'!./.git',\r\n\t'!./.svn',\r\n\t'!./gulpfile.babel.js',\r\n\t'!./wpgulp.config.js',\r\n\t'!./.eslintrc.js',\r\n\t'!./.eslintignore',\r\n\t'!./.editorconfig',\r\n\t'!./phpcs.xml.dist',\r\n\t'!./vscode',\r\n\t'!./package.json',\r\n\t'!./package-lock.json',\r\n\t'!./assets/css/**/*',\r\n\t'!./assets/css',\r\n\t'!./assets/img/raw/**/*',\r\n\t'!./assets/img/raw',\r\n\t`!${imgSRC}`,\r\n\t`!${styleSRC}`,\r\n\t`!${jsCustomSRC}`,\r\n\t`!${jsVendorSRC}`\r\n];\r\n\r\n// >>>>> Translation options.\r\n// Your text domain here.\r\nconst textDomain = 'WPGULP';\r\n\r\n// Name of the translation file.\r\nconst translationFile = 'WPGULP.pot';\r\n\r\n// Where to save the translation files.\r\nconst translationDestination = './languages';\r\n\r\n// Package name.\r\nconst packageName = 'WPGULP';\r\n\r\n// Where can users report bugs.\r\nconst bugReport = 'https://AhmadAwais.com/contact/';\r\n\r\n// Last translator Email ID.\r\nconst lastTranslator = 'Ahmad Awais <your_email@email.com>';\r\n\r\n// Team's Email ID.\r\nconst team = 'AhmadAwais <your_email@email.com>';\r\n\r\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\r\n// The following list is set as per WordPress requirements. Though; Feel free to change.\r\nconst BROWSERS_LIST = ['last 2 version', '> 1%'];\r\n\r\n// Export.\r\nmodule.exports = {\r\n\tprojectURL,\r\n\tproductURL,\r\n\tbrowserAutoOpen,\r\n\tinjectChanges,\r\n\tstyleSRC,\r\n\tstyleDestination,\r\n\t//outputStyle,\r\n\terrLogToConsole,\r\n\tprecision,\r\n\tjsVendorSRC,\r\n\tjsVendorDestination,\r\n\tjsVendorFile,\r\n\tjsCustomSRC,\r\n\tjsCustomDestination,\r\n\tjsCustomFile,\r\n\timgSRC,\r\n\timgDST,\r\n\twatchStyles,\r\n\twatchJsVendor,\r\n\twatchJsCustom,\r\n\twatchPhp,\r\n\tzipName,\r\n\tzipDestination,\r\n\tzipIncludeGlob,\r\n\tzipIgnoreGlob,\r\n\ttextDomain,\r\n\ttranslationFile,\r\n\ttranslationDestination,\r\n\tpackageName,\r\n\tbugReport,\r\n\tlastTranslator,\r\n\tteam,\r\n\tBROWSERS_LIST\r\n};\r\n"]}},"mtime":1648771774707},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\\\\webpack.config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\avada\\\\wp-content\\\\themes\\\\360-company\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.17.8:development":{"value":{"code":"var nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  mode: 'none',\n  watch: true,\n  output: {\n    filename: 'scripts.js'\n  },\n  target: 'node',\n  externals: [nodeExternals()]\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2suY29uZmlnLmpzIl0sIm5hbWVzIjpbIm5vZGVFeHRlcm5hbHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGUiLCJ3YXRjaCIsIm91dHB1dCIsImZpbGVuYW1lIiwidGFyZ2V0IiwiZXh0ZXJuYWxzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyx3QkFBRCxDQUEzQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLElBQUksRUFBRSxNQURTO0FBRWZDLEVBQUFBLEtBQUssRUFBRSxJQUZRO0FBR2ZDLEVBQUFBLE1BQU0sRUFBRTtBQUNOQyxJQUFBQSxRQUFRLEVBQUU7QUFESixHQUhPO0FBTWZDLEVBQUFBLE1BQU0sRUFBRSxNQU5PO0FBT2ZDLEVBQUFBLFNBQVMsRUFBRSxDQUFDVCxhQUFhLEVBQWQ7QUFQSSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxceGFtcHBcXGh0ZG9jc1xcYXZhZGFcXHdwLWNvbnRlbnRcXHRoZW1lc1xcMzYwLWNvbXBhbnlcXCIsInNvdXJjZXNDb250ZW50IjpbInZhciBub2RlRXh0ZXJuYWxzID0gcmVxdWlyZSgnd2VicGFjay1ub2RlLWV4dGVybmFscycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7ICBcclxuICBtb2RlOiAnbm9uZScsXHJcbiAgd2F0Y2g6IHRydWUsXHJcbiAgb3V0cHV0OiB7XHJcbiAgICBmaWxlbmFtZTogJ3NjcmlwdHMuanMnLCAgICBcclxuICB9LFxyXG4gIHRhcmdldDogJ25vZGUnLFxyXG4gIGV4dGVybmFsczogW25vZGVFeHRlcm5hbHMoKV0sXHJcbn07Il19","map":{"version":3,"sources":["webpack.config.js"],"names":["nodeExternals","require","module","exports","mode","watch","output","filename","target","externals"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,wBAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAE,MADS;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAHO;AAMfC,EAAAA,MAAM,EAAE,MANO;AAOfC,EAAAA,SAAS,EAAE,CAACT,aAAa,EAAd;AAPI,CAAjB","sourceRoot":"C:\\xampp\\htdocs\\avada\\wp-content\\themes\\360-company\\","sourcesContent":["var nodeExternals = require('webpack-node-externals');\r\n\r\nmodule.exports = {  \r\n  mode: 'none',\r\n  watch: true,\r\n  output: {\r\n    filename: 'scripts.js',    \r\n  },\r\n  target: 'node',\r\n  externals: [nodeExternals()],\r\n};"]}},"mtime":1648771780713}}